= MIME::Types for Ruby

home :: http://mime-types.rubyforge.org/
code :: https://github.com/halostatue/mime-types/
bugs :: https://github.com/halostatue/mime-types/issues
rdoc :: http://mime-types.rubyforge.org/

== Description

This library allows for the identification of a file's likely MIME content
type. This is release 1.21 with new MIME types. The identification of MIME
content type is based on a file's filename extensions.

MIME types are used in MIME-compliant communications, as in e-mail or
HTTP traffic, to indicate the type of content which is transmitted.
MIME::Types provides the ability for detailed information about MIME
entities (provided as a set of MIME::Type objects) to be determined and
used programmatically. There are many types defined by RFCs and vendors,
so the list is long but not complete; don't hesitate to ask to add
additional information. This library follows the IANA collection of MIME
types (see below for reference).

MIME::Types for Ruby was originally based on and synchronized with MIME::Types
for Perl by Mark Overmeer, copyright 2001 - 2009. As of version 1.15, the data
format for the MIME::Type list has changed and the synchronization will no
longer happen.

MIME::Types is built to conform to the MIME types of RFCs 2045 and 2231. It
follows the official {IANA registry}[http://www.iana.org/assignments/media-types/]
({ftp}[ftp://ftp.iana.org/assignments/media-types]) with some unofficial types
added from the the {LTSW collection}[http://www.ltsw.se/knbase/internet/mime.htp].

== Synopsis

MIME types are used in MIME entities, as in email or HTTP traffic. It is useful
at times to have information available about MIME types (or, inversely, about
files). A MIME::Type stores the known information about one MIME type.

    require 'mime/types'

    plaintext = MIME::Types['text/plain']
    print plaintext.media_type           # => 'text'
    print plaintext.sub_type             # => 'plain'

    puts plaintext.extensions.join(" ")  # => 'asc txt c cc h hh cpp'

    puts plaintext.encoding              # => 8bit
    puts plaintext.binary?               # => false
    puts plaintext.ascii?                # => true
    puts plaintext.obsolete?             # => false
    puts plaintext.registered?           # => true
    puts plaintext == 'text/plain'       # => true
    puts MIME::Type.simplified('x-appl/x-zip') # => 'appl/zip'

== Continuous Integration Status

{<img src="https://travis-ci.org/halostatue/mime-types.png" />}[https://travis-ci.org/halostatue/mime-types]

:include: Contributing.rdoc

:include: Licence.rdoc
